@page "/articles/{id:int}"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using BloggerBlazorServer.Data
@using BloggerBlazorServer.Models

@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject UserManager<ApplicationUser> UserManager

@if (article == null)
{
    <p>Loading...</p>
}
else if (!canView)
{
    <p>You do not have permission to view this article.</p>
}
else
{
    <h3>@article.Title</h3>
    <p>
        <small>
            By @article.Creator?.UserName on @article.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
        </small>
    </p>
    <div>@((MarkupString)article.Body)</div>
}

@code {
    [Parameter] public int id { get; set; }
    private Article? article;
    private bool canView = false;

    private bool isAdmin = false;
    private bool isContributor = false;
    private string? currentUserId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true && user.Identity.Name is not null)
        {
            var appUser = await UserManager.FindByNameAsync(user.Identity.Name);
            if (appUser != null)
            {
                isAdmin = await UserManager.IsInRoleAsync(appUser, "Admin");
                isContributor = await UserManager.IsInRoleAsync(appUser, "Contributor");
                currentUserId = appUser.Id;
            }
        }

        article = await DbContext.Articles
            .Include(a => a.Creator)
            .FirstOrDefaultAsync(a => a.Id == id);

        if (article == null)
        {
            return;
        }

        if (article.IsPublished)
        {
            canView = true;
        }
        else
        {
            if (isAdmin)
            {
                canView = true;
            }
            else if (isContributor && article.CreatedBy == currentUserId)
            {
                canView = true;
            }
            else
            {
                canView = false;
            }
        }
    }
}